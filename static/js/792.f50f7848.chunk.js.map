{"version":3,"file":"static/js/792.f50f7848.chunk.js","mappings":"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","sources":["utilities/themoviedbAPI.jsx","components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9b82d38bb9ccc6a083c91c5694927b6b';\n  \nexport const getTrending = async () => {\n    const { data } = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const getMovies = async (query, page) => {\n    const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}&page=${page}&api_key=${API_KEY}`);\n    return data;\n};\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const getMovieCredits = async (id) => {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const getMoviePosters = async (id) => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/images`);\n  return data;\n};","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css'\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n    // const defaultImg = '<https://media.comicbook.com/files/img/default-movie.png?auto=webp>'\n    const defaultImg = '<https://www.seekpng.com/png/detail/311-3111678_clapperboard-png-transparent-images-film-poster.png>'\n\n  return (\n    <ul className={css.moviesList}>\n          { movies.map(({ id, title, poster_path }) => (\n              <li className={css.moviesListItem} key={id}>\n                  <Link className={css.movieLink} state={{ from: location }} to={`/movies/${id}`} >\n                                    <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultImg\n                }\n                alt={title}\n                width={240}\n              />\n          {title}\n        </Link>\n\t\t</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;","import React, { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\nimport { getTrending } from 'utilities/themoviedbAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n    const [moviesList, setMovies] = useState([]);\n    const [isLoading, setIsloading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n\n    const getMoviesList = async () => {\n      try {\n        setIsloading(true);\n          const data = await getTrending();\n          \n        if (data.total_results === 0) {\n            setIsloading(false);\n            setError(null);\n          setError(Notify.failure('Sorry, no results found', { timeout: 3000, }));\n        }\n\n        setMovies(prevState => [...data.results]);\n      } catch (error) {\n        setError(error.message);\n      }\n      finally {\n        setIsloading(false);\n      }\n    }\n\n        getMoviesList();\n    }, []);\n\n    return (\n      <div className=\"app\">\n        <h1>Trending today</h1>\n        {error !== null && Notify.failure(`Oops, some error occured... Please try reloading the page`, { timeout: 6000, })}\n        {isLoading && <Loader />}\n        {moviesList.length !== 0 && <MoviesList movies={moviesList} />}\n      </div>\n  )\n}\n\nexport default Home;"],"names":["BASE_URL","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","movies","location","useLocation","_jsx","className","css","children","map","_ref2","id","title","poster_path","_jsxs","Link","state","from","to","src","alt","width","_useState","useState","_useState2","_slicedToArray","moviesList","setMovies","_useState3","_useState4","isLoading","setIsloading","_useState5","_useState6","error","setError","useEffect","getMoviesList","total_results","Notify","timeout","prevState","_toConsumableArray","results","t0","message","finish","Loader","length","MoviesList"],"sourceRoot":""}